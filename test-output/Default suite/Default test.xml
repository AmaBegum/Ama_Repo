<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-5MAFJ0A7" ignored="0" name="Default test" tests="30" failures="0" timestamp="09 Jul 2019 16:26:57 GMT" time="2.927" errors="0">
  <testcase name="@BeforeMethod beforeEachTest" time="2.318" classname="Library.Base">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertTrue(Assert.java:44)at org.testng.Assert.assertTrue(Assert.java:54)at Library.Library.startChromeBrowser(Library.java:51)at Library.Base.beforeEachTest(Base.java:21)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:451)at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)at org.testng.internal.Invoker.invokeMethod(Invoker.java:516)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="Library.Base">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="CheckingAllLinksOnHomePage" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- CheckingAllLinksOnHomePage -->
  <testcase name="ClickCruiseBttnTheVerifyIfpageloaded" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickCruiseBttnTheVerifyIfpageloaded -->
  <testcase name="ClickDestinatioNBttnThenNavigateBack" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickDestinatioNBttnThenNavigateBack -->
  <testcase name="ClickHotelsBttn" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickHotelsBttn -->
  <testcase name="ClickRegisterBttnTheFillOutUserInfoThenClickSignup" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickRegisterBttnTheFillOutUserInfoThenClickSignup -->
  <testcase name="ClickRegisterBttnTheFillOutcontactInfoThenClickSignup" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickRegisterBttnTheFillOutcontactInfoThenClickSignup -->
  <testcase name="ClickRegisterBttnTheFillOutcontactInfoThenClickSignupThenClickSignOFF" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickRegisterBttnTheFillOutcontactInfoThenClickSignupThenClickSignOFF -->
  <testcase name="ClickingFlightBttn" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickingFlightBttn -->
  <testcase name="ClickingLinkOne" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickingLinkOne -->
  <testcase name="ClickingLinkThree" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickingLinkThree -->
  <testcase name="ClickingLinkTwo" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickingLinkTwo -->
  <testcase name="ClickingRegisterbuttonThenFillOutAllInfoAndClickSubmit" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickingRegisterbuttonThenFillOutAllInfoAndClickSubmit -->
  <testcase name="ClickingRegisterbuttonThenFillOutAllInfoAndClickSubmit" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickingRegisterbuttonThenFillOutAllInfoAndClickSubmit -->
  <testcase name="ClickingRegisterbuttonThenFillOutAllInfoAndClickSubmit" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickingRegisterbuttonThenFillOutAllInfoAndClickSubmit -->
  <testcase name="ClickingRegisterbuttonThenFillOutAllInfoAndClickSubmit" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickingRegisterbuttonThenFillOutAllInfoAndClickSubmit -->
  <testcase name="ClickingRegisterbuttonThenFillOutAllInfoAndClickSubmit" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickingRegisterbuttonThenFillOutAllInfoAndClickSubmit -->
  <testcase name="ClickregisterThenEnterMailingInfoThenClickSignUp" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- ClickregisterThenEnterMailingInfoThenClickSignUp -->
  <testcase name="EnteringUserNamePassWordWithRandonNamesThenClickSignipn" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- EnteringUserNamePassWordWithRandonNamesThenClickSignipn -->
  <testcase name="GettingDate" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- GettingDate -->
  <testcase name="GettingSpecialPrices" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- GettingSpecialPrices -->
  <testcase name="PrintCruisePgLinks" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- PrintCruisePgLinks -->
  <testcase name="PrintRegisterPgLinks" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- PrintRegisterPgLinks -->
  <testcase name="RegisterThenClickFlightsBttnThenSelectOneWaytrip" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- RegisterThenClickFlightsBttnThenSelectOneWaytrip -->
  <testcase name="RegisterThenFillAllInfoOnFlightsPg" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- RegisterThenFillAllInfoOnFlightsPg -->
  <testcase name="RegisteringThenLoginOnHP" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- RegisteringThenLoginOnHP -->
  <testcase name="RegisteringThenLoginOnHP" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- RegisteringThenLoginOnHP -->
  <testcase name="RegisteringThenLoginOnHP" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- RegisteringThenLoginOnHP -->
  <testcase name="RegisteringThenLoginOnHP" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- RegisteringThenLoginOnHP -->
  <testcase name="RegisteringThenLoginOnHP" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- RegisteringThenLoginOnHP -->
  <testcase name="RegisteringThenSelectingPassengerCt" time="0.0" classname="test.Tests">
    <skipped/>
  </testcase> <!-- RegisteringThenSelectingPassengerCt -->
</testsuite> <!-- Default test -->
